{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stemmer"]},"docs":[{"location":"","title":"Homepage","text":"<p>For full documentation visit mkdocs.org.</p>","tags":["Mkdocs"]},{"location":"#code-annotation-examples","title":"Code Annotation Examples","text":"","tags":["Mkdocs"]},{"location":"#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>","tags":["Mkdocs"]},{"location":"#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>","tags":["Mkdocs"]},{"location":"#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>","tags":["Mkdocs"]},{"location":"#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>","tags":["Mkdocs"]},{"location":"#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>","tags":["Mkdocs"]},{"location":"#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>","tags":["Mkdocs"]},{"location":"#icons-and-emojs","title":"Icons and Emojs","text":"","tags":["Mkdocs"]},{"location":"tags/","title":"\u6807\u7b7e","text":""},{"location":"tags/#mkdocs","title":"Mkdocs","text":"<ul> <li>\u200b\u9996\u9875\u200b</li> </ul>"},{"location":"about/about/","title":"\u7f51\u7ad9\u200b\u4ecb\u7ecd","text":"<p>\u200b\u672c\u200b\u7f51\u7ad9\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u8bb0\u5f55\u200b\u6280\u672f\u200b\u5b66\u4e60\u200b\u7b14\u8bb0\u200b\u548c\u200b\u751f\u6d3b\u200b\u8bb0\u5f55\u200b</p>"},{"location":"about/build/","title":"\u6784\u5efa\u200b\u65b9\u5f0f","text":"<p>\u200b\u5f15\u200b\u81ea\u200b\uff1a</p> <p>\u200b\u7b14\u8bb0\u200b\u6587\u6863\u200b\u4e00\u628a\u200b\u68ad\u200b\u2014\u2014MkDocs \u200b\u5feb\u901f\u200b\u4e0a\u200b\u624b\u6307\u200b\u5357\u200b \uff5c \u200b\u5c11\u6570\u6d3e\u200b\u4f1a\u5458\u200b \u03c0+Prime (sspai.com)</p> <p>How To Create STUNNING Code Documentation With MkDocs Material Theme (youtube.com)</p> <p>\u200b\u6b64\u200b\u7f51\u7ad9\u200b\u57fa\u4e8e\u200bmkdocs-material\u200b\u6784\u5efa\u200b\u3002</p>"},{"location":"about/build/#mkdocs","title":"mkdocs","text":"<p>MkDocs\uff08Markdown Documents\uff09\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5feb\u901f\u200b\u3001\u200b\u7b80\u5355\u200b\u7684\u200b\u9759\u6001\u200b\u7f51\u7ad9\u200b\u751f\u6210\u5668\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5c06\u200b Markdown \u200b\u6587\u6863\u200b\u7ec4\u7ec7\u200b\u8d77\u6765\u200b\u6784\u5efa\u200b\u6210\u6709\u200b\u5c42\u6b21\u200b\u3001\u200b\u7f8e\u89c2\u200b\u7684\u200b\u6587\u6863\u200b\u7ad9\u70b9\u200b\u3002</p> <p>MkDocs \u200b\u57fa\u4e8e\u200b Python \u200b\u7f16\u5199\u200b\uff0c\u200b\u4e5f\u200b\u8d2f\u5f7b\u200b\u4e86\u200b Python \u200b\u91cc\u200b\u300c\u200b\u7b80\u6d01\u200b\u80dc\u200b\u4e8e\u200b\u590d\u6742\u200b\u300d\u200b\u7684\u200b\u7406\u5ff5\u200b\uff0c\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u5e38\u89c1\u200b\u7684\u200b\u9759\u6001\u200b\u7f51\u7ad9\u200b\u751f\u6210\u5668\u200b\u76f8\u6bd4\u200b\uff0c\u200b\u65e0\u9700\u200b\u7e41\u7410\u200b\u7684\u200b\u73af\u5883\u200b\u914d\u7f6e\u200b\uff08\u200b\u5982\u200b Jekyll \u200b\u6d89\u53ca\u200b\u7684\u200b Bundler\u3001Gems \u200b\u7b49\u200b\uff09\uff0c\u200b\u6240\u6709\u200b\u914d\u7f6e\u200b\u90fd\u200b\u7528\u200b\u53ea\u6709\u200b\u7b80\u5355\u200b\u7684\u200b\u4e00\u4e2a\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7ba1\u7406\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5f53\u4e2d\u200b\u914d\u7f6e\u200b\u9879\u200b\u7684\u200b\u5185\u5bb9\u200b\u4e5f\u200b\u4ec5\u200b\u6709\u200b\u4e00\u9875\u200b\u6587\u6863\u200b\u3002</p>"},{"location":"about/build/#mkdocsyml","title":"mkdocs.yml","text":"<p>mkdocs\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u901a\u8fc7\u200byml\u200b\u683c\u5f0f\u200b\u914d\u7f6e\u200b\uff0c\u200b\u4e3b\u8981\u200b\u914d\u7f6e\u200b\u5982\u4e0b\u200b\uff08\u200b\u5168\u90e8\u200b\u914d\u7f6e\u200b\uff09\uff1a</p> <ul> <li> <p>site_name\uff1a\u200b\u7ad9\u70b9\u200b\u540d\u79f0\u200b</p> </li> <li> <p>site_url\uff1a\u200b\u7ad9\u70b9\u200b URL \u200b\u94fe\u63a5\u200b</p> </li> <li> <p>nav\uff1aMkDocs \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u8ba9\u200b\u4f7f\u7528\u8005\u200b\u80fd\u591f\u200b\u81ea\u7531\u200b\u5b89\u6392\u200b\u6587\u6863\u200b\u5c42\u7ea7\u200b\u7ed3\u6784\u200b\u6216\u200b\u76ee\u5f55\u200b\u7f16\u6392\u200b\u7684\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u8fd9\u200b\u5c06\u200b\u51b3\u5b9a\u200b\u6700\u540e\u200b\u6587\u6863\u200b\u5728\u200b\u7ad9\u70b9\u200b\u4e2d\u200b\u7684\u200b\u7f16\u6392\u200b\u6548\u679c\u200b\u5982\u4f55\u200b\u3002\u200b\u8fd9\u91cc\u200b\u4e3b\u8981\u200b\u662f\u200b\u901a\u8fc7\u200b nav \u200b\u9879\u6765\u200b\u8fdb\u884c\u200b\u914d\u7f6e\u200b</p> </li> </ul>"},{"location":"about/build/#_2","title":"\u6269\u5c55\u200b\u548c\u200b\u4e3b\u9898","text":""},{"location":"about/build/#markdown","title":"Markdown \u200b\u6269\u5c55","text":"<p>MkDocs \u200b\u4f7f\u7528\u200b Python-Markdown \u200b\u5e93\u200b\uff08Markdown \u200b\u89c4\u8303\u200b\u7684\u200b Python \u200b\u5b9e\u73b0\u200b\uff09\u200b\u6765\u200b\u6e32\u67d3\u200b Markdown \u200b\u5185\u5bb9\u200b\uff0c\u200b\u56e0\u6b64\u200b MkDocs \u200b\u4e2d\u200b\u5bf9\u4e8e\u200b Markdown \u200b\u5185\u5bb9\u200b\u6e32\u67d3\u200b\u7684\u200b\u6269\u5c55\u200b\u4e5f\u200b\u662f\u200b\u6765\u81ea\u200b\u4e8e\u200b\u6b64\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b Python-Markdown \u200b\u7684\u200b \u200b\u5b98\u65b9\u200b\u6587\u6863\u200b \u200b\u4e2d\u200b\u6d4f\u89c8\u200b\u5230\u200b\u76ee\u524d\u200b\u6240\u200b\u652f\u6301\u200b\u7684\u200b Markdown \u200b\u6269\u5c55\u200b\u6709\u200b\u54ea\u4e9b\u200b\u3002</p>"},{"location":"about/build/#_3","title":"\u4e3b\u9898","text":"<p>https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes</p>"},{"location":"about/build/#_4","title":"\u7ad9\u70b9\u200b\u90e8\u7f72","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u53ea\u662f\u200b\u4e34\u65f6\u200b\u7528\u4e8e\u200b\u79bb\u7ebf\u200b\u6d4f\u89c8\u200b\u6587\u6863\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4f7f\u7528\u200b mkdocs serve \u200b\u547d\u4ee4\u200b\u5176\u5b9e\u200b\u8db3\u77e3\u200b\uff1b\u200b\u4f46\u200b\u5982\u679c\u200b\u4f60\u200b\u662f\u200b\u6253\u7b97\u200b\u4f5c\u4e3a\u200b\u4e2a\u4eba\u200b\u7ad9\u70b9\u200b\u6216\u200b\u4e3b\u9875\u200b\u90e8\u7f72\u200b\u5230\u200b\u4e91\u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4f60\u200b\u5c31\u200b\u9700\u8981\u200b\u5c06\u200b\u6574\u4e2a\u200b\u6587\u6863\u200b\u9879\u76ee\u200b\u7f16\u8bd1\u200b\u6253\u5305\u200b\uff0c\u200b\u6700\u540e\u200b\u653e\u5230\u200b\u5bf9\u5e94\u200b\u7684\u200b\u670d\u52a1\u5668\u200b\u4e0a\u200b\u90e8\u7f72\u200b\u3002</p> <p>\u200b\u8fd9\u91cc\u200b MkDocs \u200b\u7ed9\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u9009\u9879\u200b\uff1a\u200b\u4e00\u4e2a\u200b\u662f\u200b\u4f7f\u7528\u200b mkdocs build \u200b\u547d\u4ee4\u200b\u5c06\u200b\u9879\u76ee\u200b\u6253\u5305\u200b\u4e4b\u540e\u200b\uff0c\u200b\u518d\u200b\u7531\u200b\u4e2a\u4eba\u200b\u5c06\u200b\u6253\u5305\u200b\u6587\u4ef6\u200b\u4e0a\u4f20\u200b\u81f3\u200b\u670d\u52a1\u5668\u200b\u5bf9\u5e94\u200b\u7684\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u8fdb\u884c\u200b\u90e8\u7f72\u200b\uff1b\u200b\u53e6\u5916\u200b\u4e00\u4e2a\u200b\u5c31\u662f\u200b\u5982\u679c\u200b\u4f60\u200b\u6709\u200b\u6253\u7b97\u200b\u4f7f\u7528\u200b Github Pages \u200b\u6765\u200b\u4f5c\u4e3a\u200b\u5c55\u793a\u200b\u7684\u200b\u7ad9\u70b9\u200b\uff08\u200b\u53c2\u89c1\u200b GitHub Pages \u200b\u642d\u5efa\u200b\u6559\u7a0b\u200b\uff09\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ea\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b mkdocs gh-deploy \u200b\u8fd9\u200b\u4e00\u6761\u200b\u547d\u4ee4\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5e2e\u200b\u6211\u4eec\u200b\u5b8c\u6210\u200b\u90e8\u7f72\u200b\u4efb\u52a1\u200b\u3002</p> <p>\u200b\u8be5\u200b\u547d\u4ee4\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e3b\u8981\u200b\u662f\u200b\u5148\u200b\u5c06\u200b\u7f16\u8bd1\u200b\u6253\u5305\u200b\u597d\u200b\u7684\u200b\u76f8\u5173\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\uff08\u200b\u5982\u200b HTML \u200b\u9875\u9762\u200b\u3001\u200b\u6837\u5f0f\u200b\u3001\u200b\u9759\u6001\u200b\u8d44\u6e90\u200b\u56fe\u7247\u200b\u3001\u200b\u7528\u4e8e\u200b\u4ea4\u4e92\u200b\u7684\u200b JavaScript \u200b\u7b49\u200b\uff09\u200b\u4e0a\u4f20\u200b\u81f3\u200b\u5bf9\u5e94\u200b\u4e2a\u4eba\u200b Github \u200b\u7528\u6237\u540d\u200b\u7684\u200b Github Pages \u200b\u4ed3\u5e93\u200b\u4e2d\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u5229\u7528\u200b GitHub Actions \u200b\u6765\u200b\u4fdd\u6301\u200b\u7ad9\u70b9\u200b\u6d3b\u8dc3\u200b\u3002</p> <p>\u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u6bcf\u6b21\u200b\u53ea\u200b\u9700\u8981\u200b\u5728\u200b\u672c\u5730\u200b\u66f4\u65b0\u200b\u5185\u5bb9\u200b\u4e4b\u540e\u200b\uff0c\u200b\u901a\u8fc7\u200b\u8be5\u200b\u547d\u4ee4\u200b\u8fdb\u884c\u200b\u63d0\u4ea4\u200b\u3001\u200b\u90e8\u7f72\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u6587\u6863\u200b\u5185\u5bb9\u200b\u7684\u200b\u66f4\u65b0\u200b\u3002</p>"},{"location":"about/build/#_5","title":"\u53c2\u8003","text":"<p>Mkdocs\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8bf4\u660e\u200b(mkdocs.yml)-CSDN\u200b\u535a\u5ba2\u200b</p>"},{"location":"about/help/","title":"\u4f7f\u7528\u200b\u65b9\u5f0f","text":"<p>\u200b\u53c2\u8003\u200b\u6587\u6863\u200b\uff1a</p> <p>Material \u200b\u4e3b\u9898\u200b\u8bbe\u7f6e\u200b - \u200b\u6cd5\u5229\u200b\u9605\u85cf\u200b\u7b14\u8bb0\u200b (yiruru.com)</p> <p>Reference - Material for MkDocs (squidfunk.github.io)</p> <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Tip <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/","title":"Using <code>git sparse-checkout</code> for faster documentation builds","text":"<p>Leveraging <code>git sparse-checkout</code> in GitHub Actions enabled us to speed up documentation builds in our repository, cutting checkout times from 20 to 30 seconds to just 2 seconds.</p> <p>Developing an efficient approach to build documentation in CI workflows is essential, especially when working in large repositories with thousands of commits, like ours. Of course, we want to build documentation quickly and efficiently, ensuring fast and productive workflows. When using both the wonderful [<code>git-committers</code>][git-committers] and [<code>git-revision-date-localized</code>] [git-revision-date-localized] plugins to display [document contributors] and [dates] at the bottom of each page, we are required to set <code>fetch-depth: 0</code>, which resulted in checkout times of 20 to 30 seconds on our repository. By leveraging [<code>git sparse-checkout</code>][git sparse-checkout] within [GitHub Actions], check out time was brought down to 2 seconds.</p>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#a-primer","title":"A Primer","text":"<p>[<code>git sparse-checkout</code>][git sparse-checkout] allows you to check out only a subset of the files in a repository, making it incredibly useful for large repositories where a full checkout takes long and includes many files that are not relevant when building documentation.</p>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#github-actions","title":"GitHub Actions","text":"<p>To enable [<code>git sparse-checkout</code>][git sparse-checkout] within [GitHub Actions] and ensure that you are only building the documentation that you need, add the following lines to your workflow file:</p> <pre><code>- uses: actions/checkout@v4\n  with:\n    fetch-depth: 0\n    sparse-checkout: |\n      docs\n      includes\n</code></pre> <p>[<code>git sparse-checkout</code>][git sparse-checkout] always checks out all files residing in the repository\u2019s root. This means that regardless of the specified paths or directories for sparse checkout, the files located in the root of the repository will always be included in the checkout process.</p> <p>Thus, you only need to specify the directories that are necessary for building documentation. In our case, we only need the <code>docs</code> and <code>includes</code> folders, but if you need additional directories, you can just add them to the end of the list. A complete example workflow for [GitHub Actions]:</p> <pre><code>name: documentation\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n          sparse-checkout: |\n            docs\n            includes\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - run: pip install mkdocs-material\n      - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#conclusion","title":"Conclusion","text":"<p>That's all there is! We're super happy with the results and hope that this will help you to speed up your documentation builds in [GitHub Actions] as well. As always, feel free to share your thoughts and experiences in the comments below.</p>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/","title":"Using <code>git sparse-checkout</code> for faster documentation builds","text":"<p>Leveraging <code>git sparse-checkout</code> in GitHub Actions enabled us to speed up documentation builds in our repository, cutting checkout times from 20 to 30 seconds to just 2 seconds.</p> <p>Developing an efficient approach to build documentation in CI workflows is essential, especially when working in large repositories with thousands of commits, like ours. Of course, we want to build documentation quickly and efficiently, ensuring fast and productive workflows. When using both the wonderful [<code>git-committers</code>][git-committers] and [<code>git-revision-date-localized</code>] [git-revision-date-localized] plugins to display [document contributors] and [dates] at the bottom of each page, we are required to set <code>fetch-depth: 0</code>, which resulted in checkout times of 20 to 30 seconds on our repository. By leveraging [<code>git sparse-checkout</code>][git sparse-checkout] within [GitHub Actions], check out time was brought down to 2 seconds.</p>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#a-primer","title":"A Primer","text":"<p>[<code>git sparse-checkout</code>][git sparse-checkout] allows you to check out only a subset of the files in a repository, making it incredibly useful for large repositories where a full checkout takes long and includes many files that are not relevant when building documentation.</p>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#github-actions","title":"GitHub Actions","text":"<p>To enable [<code>git sparse-checkout</code>][git sparse-checkout] within [GitHub Actions] and ensure that you are only building the documentation that you need, add the following lines to your workflow file:</p> <pre><code>- uses: actions/checkout@v4\n  with:\n    fetch-depth: 0\n    sparse-checkout: |\n      docs\n      includes\n</code></pre> <p>[<code>git sparse-checkout</code>][git sparse-checkout] always checks out all files residing in the repository\u2019s root. This means that regardless of the specified paths or directories for sparse checkout, the files located in the root of the repository will always be included in the checkout process.</p> <p>Thus, you only need to specify the directories that are necessary for building documentation. In our case, we only need the <code>docs</code> and <code>includes</code> folders, but if you need additional directories, you can just add them to the end of the list. A complete example workflow for [GitHub Actions]:</p> <pre><code>name: documentation\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n          sparse-checkout: |\n            docs\n            includes\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - run: pip install mkdocs-material\n      - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#conclusion","title":"Conclusion","text":"<p>That's all there is! We're super happy with the results and hope that this will help you to speed up your documentation builds in [GitHub Actions] as well. As always, feel free to share your thoughts and experiences in the comments below.</p>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/","title":"Using <code>git sparse-checkout</code> for faster documentation builds","text":"<p>Leveraging <code>git sparse-checkout</code> in GitHub Actions enabled us to speed up documentation builds in our repository, cutting checkout times from 20 to 30 seconds to just 2 seconds.</p> <p>Developing an efficient approach to build documentation in CI workflows is essential, especially when working in large repositories with thousands of commits, like ours. Of course, we want to build documentation quickly and efficiently, ensuring fast and productive workflows. When using both the wonderful [<code>git-committers</code>][git-committers] and [<code>git-revision-date-localized</code>] [git-revision-date-localized] plugins to display [document contributors] and [dates] at the bottom of each page, we are required to set <code>fetch-depth: 0</code>, which resulted in checkout times of 20 to 30 seconds on our repository. By leveraging [<code>git sparse-checkout</code>][git sparse-checkout] within [GitHub Actions], check out time was brought down to 2 seconds.</p>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#a-primer","title":"A Primer","text":"<p>[<code>git sparse-checkout</code>][git sparse-checkout] allows you to check out only a subset of the files in a repository, making it incredibly useful for large repositories where a full checkout takes long and includes many files that are not relevant when building documentation.</p>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#github-actions","title":"GitHub Actions","text":"<p>To enable [<code>git sparse-checkout</code>][git sparse-checkout] within [GitHub Actions] and ensure that you are only building the documentation that you need, add the following lines to your workflow file:</p> <pre><code>- uses: actions/checkout@v4\n  with:\n    fetch-depth: 0\n    sparse-checkout: |\n      docs\n      includes\n</code></pre> <p>[<code>git sparse-checkout</code>][git sparse-checkout] always checks out all files residing in the repository\u2019s root. This means that regardless of the specified paths or directories for sparse checkout, the files located in the root of the repository will always be included in the checkout process.</p> <p>Thus, you only need to specify the directories that are necessary for building documentation. In our case, we only need the <code>docs</code> and <code>includes</code> folders, but if you need additional directories, you can just add them to the end of the list. A complete example workflow for [GitHub Actions]:</p> <pre><code>name: documentation\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n          sparse-checkout: |\n            docs\n            includes\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - run: pip install mkdocs-material\n      - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#conclusion","title":"Conclusion","text":"<p>That's all there is! We're super happy with the results and hope that this will help you to speed up your documentation builds in [GitHub Actions] as well. As always, feel free to share your thoughts and experiences in the comments below.</p>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/","title":"Using <code>git sparse-checkout</code> for faster documentation builds","text":"<p>Leveraging <code>git sparse-checkout</code> in GitHub Actions enabled us to speed up documentation builds in our repository, cutting checkout times from 20 to 30 seconds to just 2 seconds.</p> <p>Developing an efficient approach to build documentation in CI workflows is essential, especially when working in large repositories with thousands of commits, like ours. Of course, we want to build documentation quickly and efficiently, ensuring fast and productive workflows. When using both the wonderful [<code>git-committers</code>][git-committers] and [<code>git-revision-date-localized</code>] [git-revision-date-localized] plugins to display [document contributors] and [dates] at the bottom of each page, we are required to set <code>fetch-depth: 0</code>, which resulted in checkout times of 20 to 30 seconds on our repository. By leveraging [<code>git sparse-checkout</code>][git sparse-checkout] within [GitHub Actions], check out time was brought down to 2 seconds.</p>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#a-primer","title":"A Primer","text":"<p>[<code>git sparse-checkout</code>][git sparse-checkout] allows you to check out only a subset of the files in a repository, making it incredibly useful for large repositories where a full checkout takes long and includes many files that are not relevant when building documentation.</p>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#github-actions","title":"GitHub Actions","text":"<p>To enable [<code>git sparse-checkout</code>][git sparse-checkout] within [GitHub Actions] and ensure that you are only building the documentation that you need, add the following lines to your workflow file:</p> <pre><code>- uses: actions/checkout@v4\n  with:\n    fetch-depth: 0\n    sparse-checkout: |\n      docs\n      includes\n</code></pre> <p>[<code>git sparse-checkout</code>][git sparse-checkout] always checks out all files residing in the repository\u2019s root. This means that regardless of the specified paths or directories for sparse checkout, the files located in the root of the repository will always be included in the checkout process.</p> <p>Thus, you only need to specify the directories that are necessary for building documentation. In our case, we only need the <code>docs</code> and <code>includes</code> folders, but if you need additional directories, you can just add them to the end of the list. A complete example workflow for [GitHub Actions]:</p> <pre><code>name: documentation\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n          sparse-checkout: |\n            docs\n            includes\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - run: pip install mkdocs-material\n      - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"blog/build/performance/using_git_sparse-checkout_for_faster_documentation_builds/#conclusion","title":"Conclusion","text":"<p>That's all there is! We're super happy with the results and hope that this will help you to speed up your documentation builds in [GitHub Actions] as well. As always, feel free to share your thoughts and experiences in the comments below.</p>"},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/archive/2021/","title":"2021","text":""},{"location":"blog/category/build/","title":"Build","text":""},{"location":"blog/category/performance/","title":"Performance","text":""},{"location":"tags/","title":"\u6807\u7b7e","text":""},{"location":"tags/#mkdocs","title":"Mkdocs","text":"<ul> <li>\u200b\u9996\u9875\u200b</li> </ul>"}]}